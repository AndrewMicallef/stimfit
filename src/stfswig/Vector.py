# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _Vector
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


scharLength = _Vector.scharLength
scharProd = _Vector.scharProd
scharSum = _Vector.scharSum
scharReverse = _Vector.scharReverse
scharOnes = _Vector.scharOnes
scharZeros = _Vector.scharZeros
scharEOSplit = _Vector.scharEOSplit
scharTwos = _Vector.scharTwos
scharThrees = _Vector.scharThrees
ucharLength = _Vector.ucharLength
ucharProd = _Vector.ucharProd
ucharSum = _Vector.ucharSum
ucharReverse = _Vector.ucharReverse
ucharOnes = _Vector.ucharOnes
ucharZeros = _Vector.ucharZeros
ucharEOSplit = _Vector.ucharEOSplit
ucharTwos = _Vector.ucharTwos
ucharThrees = _Vector.ucharThrees
shortLength = _Vector.shortLength
shortProd = _Vector.shortProd
shortSum = _Vector.shortSum
shortReverse = _Vector.shortReverse
shortOnes = _Vector.shortOnes
shortZeros = _Vector.shortZeros
shortEOSplit = _Vector.shortEOSplit
shortTwos = _Vector.shortTwos
shortThrees = _Vector.shortThrees
ushortLength = _Vector.ushortLength
ushortProd = _Vector.ushortProd
ushortSum = _Vector.ushortSum
ushortReverse = _Vector.ushortReverse
ushortOnes = _Vector.ushortOnes
ushortZeros = _Vector.ushortZeros
ushortEOSplit = _Vector.ushortEOSplit
ushortTwos = _Vector.ushortTwos
ushortThrees = _Vector.ushortThrees
intLength = _Vector.intLength
intProd = _Vector.intProd
intSum = _Vector.intSum
intReverse = _Vector.intReverse
intOnes = _Vector.intOnes
intZeros = _Vector.intZeros
intEOSplit = _Vector.intEOSplit
intTwos = _Vector.intTwos
intThrees = _Vector.intThrees
uintLength = _Vector.uintLength
uintProd = _Vector.uintProd
uintSum = _Vector.uintSum
uintReverse = _Vector.uintReverse
uintOnes = _Vector.uintOnes
uintZeros = _Vector.uintZeros
uintEOSplit = _Vector.uintEOSplit
uintTwos = _Vector.uintTwos
uintThrees = _Vector.uintThrees
longLength = _Vector.longLength
longProd = _Vector.longProd
longSum = _Vector.longSum
longReverse = _Vector.longReverse
longOnes = _Vector.longOnes
longZeros = _Vector.longZeros
longEOSplit = _Vector.longEOSplit
longTwos = _Vector.longTwos
longThrees = _Vector.longThrees
ulongLength = _Vector.ulongLength
ulongProd = _Vector.ulongProd
ulongSum = _Vector.ulongSum
ulongReverse = _Vector.ulongReverse
ulongOnes = _Vector.ulongOnes
ulongZeros = _Vector.ulongZeros
ulongEOSplit = _Vector.ulongEOSplit
ulongTwos = _Vector.ulongTwos
ulongThrees = _Vector.ulongThrees
longLongLength = _Vector.longLongLength
longLongProd = _Vector.longLongProd
longLongSum = _Vector.longLongSum
longLongReverse = _Vector.longLongReverse
longLongOnes = _Vector.longLongOnes
longLongZeros = _Vector.longLongZeros
longLongEOSplit = _Vector.longLongEOSplit
longLongTwos = _Vector.longLongTwos
longLongThrees = _Vector.longLongThrees
ulongLongLength = _Vector.ulongLongLength
ulongLongProd = _Vector.ulongLongProd
ulongLongSum = _Vector.ulongLongSum
ulongLongReverse = _Vector.ulongLongReverse
ulongLongOnes = _Vector.ulongLongOnes
ulongLongZeros = _Vector.ulongLongZeros
ulongLongEOSplit = _Vector.ulongLongEOSplit
ulongLongTwos = _Vector.ulongLongTwos
ulongLongThrees = _Vector.ulongLongThrees
floatLength = _Vector.floatLength
floatProd = _Vector.floatProd
floatSum = _Vector.floatSum
floatReverse = _Vector.floatReverse
floatOnes = _Vector.floatOnes
floatZeros = _Vector.floatZeros
floatEOSplit = _Vector.floatEOSplit
floatTwos = _Vector.floatTwos
floatThrees = _Vector.floatThrees
doubleLength = _Vector.doubleLength
doubleProd = _Vector.doubleProd
doubleSum = _Vector.doubleSum
doubleReverse = _Vector.doubleReverse
doubleOnes = _Vector.doubleOnes
doubleZeros = _Vector.doubleZeros
doubleEOSplit = _Vector.doubleEOSplit
doubleTwos = _Vector.doubleTwos
doubleThrees = _Vector.doubleThrees


